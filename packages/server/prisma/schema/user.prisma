model User {
    id                String @id @unique @default(cuid())
    preferredLanguage String @default("en")
    email             String @unique
    password          String
    username          String @unique

    ranks Rank[]

    // Authentication
    accessTokens  AccessToken[]
    refreshTokens RefreshToken[]

    // Timestamps
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("users")
}

model AccessToken {
    id        String   @id @default(cuid())
    token     String   @unique
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    expiresAt DateTime

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
}

model RefreshToken {
    id        String   @id @default(cuid())
    token     String   @unique
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    expiresAt DateTime

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
}

enum Rank {
    ADMIN
    DEFAULT
}
